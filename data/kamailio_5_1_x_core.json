[
    {
        "rightLabel": "Config Pre-Processor Directives",
        "text": "import_file",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "import",
        "description": "\n   import_file path_to_file\n\nSimilar to include_file, but does not throw error if the included file is not found.\n\n"
    },
    {
        "rightLabel": "Config Pre-Processor Directives",
        "text": "define",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "import",
        "description": "\n\nControl in C-style what parts of the config file are executed. The parts in non-defined zones are not loaded, ensuring lower memory usage and faster execution.\n\n\nAvailable directives:\n\n\n #!define NAME - define a keyword\n\n #!define NAME VALUE - define a keyword with value\n\n #!ifdef NAME - check if a keyword is defined\n\n #!ifndef - check if a keyword is not defined\n\n #!else - switch to false branch of ifdef/ifndef region\n\n #!endif - end ifdef/ifndef region\n\n #!trydef - add a define if not already defined\n\n #!redefine - force redefinition even if already defined\n\n\n\nAmong benefits:\n\n\n easy way to enable/disable features (e.g., see default cfg for 3.0.0 \u2013 controlling support of nat traversal, presence, etc\u2026)\n\n switch control for parts where conditional statements were not possible (e.g., global parameters, module settings)\n\n faster by not using conditional statements inside routing blocks when switching between running environments\n\n\n\nExample: how to make config to be used in two environments, say testbed and production, controlled just by one define to switch between the two modes:\n\n...\n\n#!define TESTBED_MODE\n#!ifdef TESTBED_MODE\n  debug=5\n  log_stderror=yes\n  listen=192.168.1.1\n#!else\n  debug=2\n  log_stderror=no\n  listen=10.0.0.1\n#!endif\n\n...\n\n#!ifdef TESTBED_MODE\nmodparam(acc|auth_db|usrloc, db_url,\nmysql://openser:openserrw@localhost/openser_testbed)\n#!else\nmodparam(acc|auth_db|usrloc, db_url,\nmysql://openser:openserrw@10.0.0.2/openser_production)\n#!endif\n\n...\n\n#!ifdef TESTBED_MODE\nroute[DEBUG] {\n  xlog(SCRIPT: SIP $rm from: $fu to: $ru - srcip: $si\\n);\n}\n#!endif\n\n...\n\nroute {\n#!ifdef TESTBED_MODE\n  route(DEBUG);\n#!endif\n\n  ...\n}\n\n...\n\n you can define values for IDs\n\n\n#!define MYINT 123\n#!define MYSTR xyz\n\n defined IDs are replaced at startup, during config parsing, e.g.,:\n\n\n$var(x) = 100 + MYINT;\n\n is interpreted as:\n\n\n$var(x) = 100 + 123;\n\n you can have multi-line defined IDs\n\n\n#!define IDLOOP $var(i) = 0; \\\n                while($var(i)5) { \\\n                    xlog(++++ $var(i)\\n); \\\n                    $var(i) = $var(i) + 1; \\\n                }\n\n then in routing block\n\n\nroute {\n    ...\n    IDLOOP\n    ...\n}\n\n number of allowed defines is now set to 256\n\n\n\n notes:\n\n multilines defines are reduced to single line, so line counter should be fine\n\n column counter goes inside the define value, but you have to omit the '\\' and CR for the accurate inside-define position\n\n text on the same line as the directive will cause problems. Keep the directive lines clean and only comment on a line before or after. \n\n\n\n\n"
    },
    {
        "rightLabel": "Config Pre-Processor Directives",
        "text": "subst",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "import",
        "description": "\n\n perform substitutions inside the strings of config (note that define is replacing only IDs - alphanumeric tokens not enclosed in quotes)\n\n #!subst offers an easy way to search and replace inside strings before cfg parsing. E.g.,:\n\n\n#!subst /regexp/subst/flags\n\n flags is optional and can be: 'i' - ignore case; 'g' - global replacement\n\n\n\nExample:\n\n#!subst /DBPASSWD/xyz/\nmodparam(acc, db_url, mysql://user:DBPASSWD@localhost/db)\n\n will do the substitution of db password in db_url parameter value\n\n\n"
    },
    {
        "rightLabel": "Config Pre-Processor Directives",
        "text": "substdef",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "import",
        "description": "\n#!substdef /ID/subst/\n\nSimilar to subst, but in addition it adds a #!define ID subst.\n\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "af",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThe address family of the received SIP message. It is INET if the message was received over IPv4 or INET6 if the message was received over IPv6.\n\n\nExampe of usage:\n\n if (af==INET6) {\nlog(Message received over IPv6 link\\n);\n}\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "dst_ip",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThe IP of the local interface where the SIP message was received. When the proxy listens on many network interfaces, makes possible to detect which was the one that received the packet.\n\n\nExample of usage:\n\n if(dst_ip==127.0.0.1) {\nlog(message received on loopback interface\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "dst_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThe local port where the SIP packet was received. When Kamailio is listening on many ports, it is useful to learn which was the one that received the SIP packet.\n\n\nExample of usage:\n\n if(dst_port==5061)\n{\nlog(message was received on port 5061\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "from_uri",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThis script variable is a reference to the URI of 'From' header. It can be used to test 'From'- header URI value.\n\n\nExample of usage:\n\n if(is_method(INVITE)  from_uri=~.*@kamailio.org)\n{\nlog(the caller is from kamailio.org\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "method",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThe variable is a reference to the SIP method of the message.\n\n\nExample of usage:\n\n if(method==REGISTER)\n{\nlog(this SIP request is a REGISTER message\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "msg:len",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThe variable is a reference to the size of the message. It can be used in 'if' constructs to test message's size.\n\n\nExample of usage:\n\n if(msg:len2048)\n{\n        sl_send_reply(413, message too large);\nexit;\n};\n\n.\n\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "proto",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThis variable can be used to test the transport protocol of the SIP message.\n\n\nExample of usage:\n\n if(proto==UDP)\n{\nlog(SIP message received over UDP\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "status",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nIf used in onreply_route, this variable is a referece to the status code of the reply. If it used in a standard route block, the variable is a reference to the status of the last reply sent out for the current request.\n\n\nExample of usage:\n\n if(status==200)\n{\nlog(this is a 200 OK reply\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "snd_af",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "snd_ip",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "snd_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "snd_proto",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "src_ip",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nReference to source IP address of the SIP message.\n\n\nExample of usage:\n\n if(src_ip==127.0.0.1)\n{\nlog(the message was sent from localhost!\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "src_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nReference to source port of the SIP message (from which port the message was sent by previous hop).\n\n\nExample of usage:\n\n if(src_port==5061)\n{\nlog(message sent from port 5061\\n);\n}\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "to_ip",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "to_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "to_uri",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThis variable can be used to test the value of URI from To header.\n\n\nExample of usage:\n\n if(to_uri=~sip:.+@kamailio.org)\n{\nlog(this is a request for kamailio.org users\\n);\n};\n"
    },
    {
        "rightLabel": "Core Keywords",
        "text": "uri",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "keyword",
        "description": "\n\nThis variable can be used to test the value of the request URI.\n\n\nExample of usage:\n\n if(uri=~sip:.+@kamailio.org)\n{\nlog(this is a request for kamailio.org users\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "INET",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test whether the SIP packet was received over an IPv4 connection.\n\n\nExample of usage:\n\n if (af==INET) {\nlog(the SIP message was received over IPv4\\n);\n}\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "INET6",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test whether the SIP packet was received over an IPv6 connection.\n\n\nExample of usage:\n\n if(af==INET6)\n{\nlog(the SIP message was received over IPv6\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "SCTP",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over SCTP or not.\n\n\nExample of usage:\n\n if(proto==SCTP)\n{\nlog(the SIP message was received over SCTP\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "TCP",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TCP or not.\n\n\nExample of usage:\n\n if(proto==TCP)\n{\nlog(the SIP message was received over TCP\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "TLS",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TLS or not.\n\n\nExample of usage:\n\n if(proto==TLS)\n{\nlog(the SIP message was received over TLS\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "UDP",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over UDP or not.\n\n\nExample of usage:\n\n if(proto==UDP)\n{\nlog(the SIP message was received over UDP\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "WS",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over WS or not.\n\n\nExample of usage:\n\n if(proto==WS)\n{\nlog(the SIP message was received over WS\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "WSS",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis keyword can be used to test the value of 'proto' and check whether the SIP packet was received over WSS or not.\n\n\nExample of usage:\n\n if(proto==WSS)\n{\nlog(the SIP message was received over WSS\\n);\n};\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "max_len",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nNote: This command was removed.\n\n"
    },
    {
        "rightLabel": "Core Values",
        "text": "myself",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThis is a reference to the list of local IP addresses, hostnames and aliases that has been set in the Kamailio configuration file. This lists contain the domains served by Kamailio.\n\n\nThe variable can be used to test if the host part of an URI is in the list. The usefulness of this test is to select the messages that has to be processed locally or has to be forwarded to another server.\n\n\nSee \u201calias\u201d to add hostnames,IP addresses and aliases to the list.\n\n\nExample of usage:\n\n if(uri==myself) {\nlog(the request is for local processing\\n);\n};\n\nNote: You can also use the is_myself() function.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "advertised_address",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIt can be an IP address or string and represents the address advertised in Via header. If empty or not set (default value) the socket\naddress from where the request will be sent is used.\n\nWARNING: \n- don't set it unless you know what you are doing (e.g. nat traversal)\n- you can set anything here, no check is made (e.g. foo.bar will be accepted even if foo.bar doesn't exist)\n\nExample of usage:\n\n  advertised_address=\u200b1.2.3.4\u200b\n  advertised_address=kamailio.org\n\nNote: this option may be deprecated and removed in the near future, it is recommended to set advertise option for listen parameter.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "advertised_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe port advertised in Via header. If empty or not set (default value) the port from where the message will be sent is used. Same warnings as for 'advertised_address'.\n\n\nExample of usage:\n\n  advertised_port=5080\n\nNote: this option may be deprecated and removed in the near future, it is recommended to set advertise option for listen parameter.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "alias",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nParameter to set alias hostnames for the server. It can be set many times, each value being added in a list to match the hostname when 'myself' is checked.\n\n\nIt is necessary to include the port (the port value used in the \u201cport=\u201d or \u201clisten=\u201d defintions) in the alias definition otherwise the loose_route() function will not work as expected for local forwards. Even if you do not use 'myself' explicitly (for example if you use the domain module), it is often necessary to set the alias as these aliases are used by the loose_routing function and might be needed to handle requests with pre-loaded route set correctly.\n\n\nExample of usage:\n\n    alias=other.domain.com:5060\n    alias=another.domain.com:5060\n\nNote: the hostname has to be enclosed in between quotes if it has reserved tokens such as forward, drop \u2026 or operators such as - (minus) \u2026\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "async_workers",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSpecify how many child processes to create for asynchronous execution. These are processes that can receive tasks from various components and execute them locally, which is different process than the task sender.\n\n\nDefault: 0 (asynchronous framework is disabled).\n\n\nExample:\n\n    async_workers=4\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "auto_aliases",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nKamailio by default discovers all IPv4 addresses on all interfaces and does a reverse DNS lookup on these addresses to find host names. Discovered host names are added to aliases list, matching the myself condition. To disable host names auto-discovery, turn off auto_aliases.\n\n\nExample:\n\n    auto_aliases=no\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "auto_bind_ipv6",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nWhen turned on, Kamailio will automatically bind to all IPv6 addresses (much like the default behaviour for IPv4).\n\n\nExample:\n\n    auto_bind_ipv6=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "check_via",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nCheck if the address in top most via of replies is local. Default value is 0 (check disabled).\n\n\nExample of usage:\n\n  check_via=1 \n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "children",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of children to fork for the UDP interfaces (one set for each interface - ip:port). Default value is 8. For example if you configure the proxy to listen on 3 UDP ports, it will create 3xchildren processes which handle the incoming UDP messages.\n\n\nFor configuration of the TCP/TLS worker threads see the option \u201ctcp_children\u201d.\n\n\nExample of usage:\n\n  children=16\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "chroot",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe value must be a valid path in the system. If set, Kamailio will chroot (change root directory) to its value.\n\n\nExample of usage:\n\n  chroot=/other/fakeroot\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "corelog",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the debug level used to print some log messages from core, which might become annoying and don't represent critical errors. For example, such case is failure to parse incoming traffic from the network as SIP message, due to someone sending invalid content.\n\n\nDefault value is -1 (L_ERR).\n\n\nExample of usage:\n\ncorelog=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "debug",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the debug level. Higher values make Kamailio to print more debug messages. Log messages are usually sent to syslog, except if logging to stderr was activated (see log_stderror parameter).\n\n\nThe following log levels are defined:\n\n L_ALERT     -5\n L_BUG       -4\n L_CRIT2     -3\n L_CRIT      -2\n L_ERR       -1\n L_WARN       0 \n L_NOTICE     1 \n L_INFO       2 \n L_DBG        3 \n\nA log message will be logged if its log-level is lower than the defined debug level. Log messages are either produced by the the code, or manually in the configuration script using log() or xlog() functions. For a production server you usually use a log value between -1 and 2.\n\n\nDefault value: L_WARN (debug=0)\n\n\nExamples of usage:\n\n\n debug=3: print all log messages. This is only usefull for debugging of problems. Note: this produces a lot of data and therefore should not be used on production servers (on a busy server this can easily fill up your hard disk with log messages)\n\n debug=0: This will only log warning, errors and more critical messages.\n\n debug=-6: This will disable all log messages.\n\n\n\nValue of 'debug' parameter can also be get and set dynamically using the 'debug' Core MI function or the RPC function, e.g.:\n\nkamcmd cfg.get core debug\nkamcmd cfg.set_now_int core debug 2\nkamcmd cfg.set_now_int core debug -- -1\n\nNote: There is a difference in log-levels between Kamailio 3.x and Kamailio\u21d01.5: Up to Kamailio 1.5 the log level started with 4, whereas in Kamailio=3 the log level starts with 3. Thus, if you were using debug=3 in older Kamailio/Openser, now use debug=2.\n\n\nFor configuration of logging of the memory manager see the parameters memlog and memdbg.\n\n\nFurther information can also be bound at: http://www.kamailio.org/dokuwiki/doku.php/tutorials:debug-syslog-messages\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "description",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: descr desc\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "disable_core_dump",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nCan be 'yes' or 'no'. By default core dump limits are set to unlimited or a high enough value. Set this config variable to 'yes' to disable core dump-ing (will set core limits to 0).\n\n\nDefault value is 'no'.\n\n\nExample of usage:\n\n  disable_core_dump=yes\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "disable_tls",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: tls_disable\n\n\nGlobal parameter to disable TLS support in the SIP server. Default value is 'no'.\n\n\nNote: Make sure to load the \u201ctls\u201d module to get tls functionality.\n\n\nExample of usage:\n\n  disable_tls=yes\n\nIn Kamailio TLS is implemented as a module. Thus, the TLS configuration is done as module configuration. For more details see the README of the TLS module:\nhttp://kamailio.org/docs/modules/devel/modules/tls.html\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "enable_tls",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: tls_enable\n\n\nReverse Meaning of the disable_tls parameter. See disable_tls parameter.\n\nenable_tls=yes # enable tls support in core\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "exit_timeout",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: ser_kill_timeout\n\n\nHow much time Kamailio will wait for all the shutdown procedures to complete. If this time is exceeded, all the remaining processes are immediately killed and Kamailio exits immediately (it might also generate a core dump if the cleanup part takes too long).\n\n\nDefault: 60 s. Use 0 to disable.\n\n exit_timeout = seconds\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "flags",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: bool\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "force_rport",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nyes/no: Similar to the force_rport() function, but activates symmetric response routing globally.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "fork",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 'yes' the proxy will fork and run in daemon mode - one process will be created for each network interface the proxy listens to and for each protocol (TCP/UDP), multiplied with the value of 'children' parameter.\n\n\nWhen set to 'no', the proxy will stay bound to the terminal and runs as single process. First interface is used for listening to. This is equivalent to setting the server option \u201c-F\u201d.\n\n\nDefault value is 'yes'.\n\n\nExample of usage:\n\n  fork=no\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "fork_delay",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of usecs to wait before forking a process.\n\n\nDefault is 0 (don't wait).\n\n\nExample of usage:\n\nfork_delay=5000\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "group",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: gid\n\n\nThe group id to run Kamailio.\n\n\nExample of usage:\n\ngroup=siprouter\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "http_reply_parse",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias: http_reply_hack\n\n\nWhen enabled, Kamailio can parse HTTP replies, but does so by treating them as SIP replies.  When not enabled HTTP replies cannot be parsed. This was previously a compile-time option, now it is run-time.\n\n\nDefault value is 'no'.\n\n\nExample of usage:\n\nhttp_reply_parse=yes\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "ip_free_bind",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias: ip_freebind, ipfreebind\n\n\nControl if Kamailio should attempt to bind to non local ip.This option is the per-socket equivalent of the system ip_nonlocal_bind.\n\n\nDefault is 0 (do not bind to non local ip).\n\n\nExample of usage:\n\n  ip_free_bind = 1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "latency_cfg_log",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to a log level less or equal than debug parameter, a log message with the duration in microseconds of executing request route or reply route is printed to syslog.\n\n\nDefault value is 3 (L_DBG).\n\n\nExample:\n\nlatency_cfg_log=2\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "latency_limit_action",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLimit of latency in ms for config actions. If a config action executed by cfg interpreter takes longer than its value, a message is printed in the logs, showing config path, line and action name when it is a module function, as well as internal action id.\n\n\nDefault value is 0 (disabled).\n\nlatency_limit_action=500\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "latency_limit_db",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLimit of latency in ms for db operations. If a db operation executed via DB API v1 takes longer that its value, a message is printed in the logs, showing the first 50 characters of the db query.\n\n\nDefault value is 0 (disabled).\n\nlatency_limit_db=500\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "latency_log",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLog level to print the messages related to latency.\n\n\nDefault value is -1 (L_ERR).\n\nlatency_log=3\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "listen",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the network addresses the SIP server should listen to. It can be an IP address, hostname or network iterface id or combination of protocol:address:port (e.g., udp:10.10.10.10:5060). This parameter can be set multiple times in same configuration file, the server listening on all addresses specified.\n\n\nExample of usage:\n\n    listen=10.10.10.10\n    listen=eth1:5062\n    listen=udp:10.10.10.10:5064\n\nIf you omit this directive then the SIP server will listen on all interfaces. On start the SIP server reports all the interfaces that it is listening on. Even if you specify only UDP interfaces here, the server will start the TCP engine too. If you don't want this, you need to disable the TCP support completely with the core parameter disable_tcp.\n\n\nIf you specify IPv6 addresses, you should put them into square brackets, e.g.:\n\n    listen=udp:[2a02:1850:1:1::13]:5060\n\nYou can specify an advertise address (like ip:port) per listening socket - it will be used to build headers such as Via and Record-Route:\n\n    listen=udp:10.10.10.10:5060 advertise  11.11.11.11:5060\n\nThe advertise address must be the format 'address:port', the protocol is taken from the bind socket. The advertise address is a convenient alternative to advertised_address / advertised_port cfg parameters or set_advertised_address() / set_advertised_port() cfg functions.\n\n\nA typical use case for advertise address is when running SIP server behind a NAT/Firewall, when the local IP address (to be used for bind) is different than the public IP address (to be used for advertising).\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "loadmodule",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLoads a module for later usage in the configuration script. The modules is searched in the path specified by loadpath.\n\n\nPrototype: loadmodule \u201cmodulepath\u201d\n\n\nIf modulepath is only modulename or modulename.so, then Kamailio will try to search also for modulename/modulename.so, very useful when using directly the version compiled in the source tree.\n\n\nExample of usage:\n\n    loadpath /usr/local/lib/kamailio/:usr/local/lib/kamailio/modules/\n\n    loadmodule /usr/local/lib/kamailio/modules/db_mysql.so\n    loadmodule modules/usrloc.so\n    loadmodule tm\n    loadmodule dialplan.so\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "loadpath",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: mpath\n\n\nSet the module search path. loadpath takes a list of directories separated by ':'. The list is searched in-order. For each directory d, $d/${module_name}.so and $d/${module_name}/${module_name}.so are tried.\n\n\nThis can be used to simplify the loadmodule parameter and can include many paths separated by colon. First module found is used. \n\n\nExample of usage: \n\n    loadpath /usr/local/lib/kamailio/modules:/usr/local/lib/kamailio/mymodules\n\n    loadmodule mysql\n    loadmodule uri\n    loadmodule uri_db\n    loadmodule sl\n    loadmodule tm\n\nThe proxy tries to find the modules in a smart way, e.g: loadmodule \u201curi\u201d tries to find uri.so in the loadpath, but also uri/uri.so.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_engine_data",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet specific data required by the log engine. See also the log_engine_type.\n\nlog_engine_type=udp\nlog_engine_data=127.0.0.1:9\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_engine_type",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSpecify what logging engine to be used and its initialization data. A logging engine is implemented as a module. Supported values are a matter of the module.\n\n\nFor example, see the readme of log_custom module for more details.\n\nlog_engine_type=udp\nlog_engine_data=127.0.0.1:9\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_facility",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf Kamailio logs to syslog, you can control the facility for logging. Very useful when you want to divert all Kamailio logs to a different log file. See the man page syslog(3) for more details.\n\n\nFor more see: http://www.kamailio.org/dokuwiki/doku.php/tutorials:debug-syslog-messages\n\n\nDefault value is LOG_DAEMON.\n\n\nExample of usage:\n\n  log_facility=LOG_LOCAL0\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_name",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAllows to configure a log_name prefix which will be used when printing to syslog \u2013 it is also known as syslog tag, and the default value is the application name or full path that printed the log message. This is useful to filter log messages when running many instances of Kamailio on same server.\n\nlog_name=kamailio-proxy-5080\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_prefix",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSpecify the text to be prefixed to the log messages printed by Kamailio while processing a SIP message. It can contain script variables that are evaluated at runtime (see log_prefix_mode about when/how evaluation is done).\n\n\nExample - prefix with message type (1 - request, 2 - response), CSeq and Call-ID:\n\nlog_prefix={$mt $hdr(CSeq) $ci} \n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_prefix_mode",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 0 (default), then log_prefix is evaluated when the sip message is received and then reused (recommended if the log_prefix has only variables that have same value for same message). This is the current behaviour of log_prefix evaluation.\n\n\nIf set to 1, then the log prefix is evaluated before/after each config action (needs to be set when the log_prefix has variables that are different based on the context of config execution, e.g., $cfg(line)).\n\n\nExample:\n\nlog_prefix_mode=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "log_stderror",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nWith this parameter you can make Kamailio to write log and debug messages to standard error. Possible values are:\n\n\n- \u201cyes\u201d - write the messages to standard error\n\n\n- \u201cno\u201d - write the messages to syslog\n\n\nDefault value is \u201cno\u201d.\n\n\nFor more see: http://www.kamailio.org/dokuwiki/doku.php/tutorials:debug-syslog-messages\n\n\nExample of usage:\n\n  log_stderror=yes\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "maxbuffer",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe size in bytes not to be exceeded during the auto-probing procedure of descovering the maximum buffer size for receiving UDP messages. Default value is 262144.\n\n\nExample of usage:\n\n  maxbuffer=65536\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "max_branches",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe maximum number of outgoing branches for each SIP request. It has impact on the size of destination set created in core (e.g., via append_branch()) as well as the serial and parallel forking done via tm module. It replaces the old defined constant MAX_BRANCHES.\n\n\nThe value has to be at least 1 and the upper limit is 31.\n\n\nDefault value: 12\n\n\nExample of usage:\n\nmax_branches=16\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "max_recursive_level",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe parameters set the value of maximum recursive calls to blocks of actions, such as sub-routes or chained IF-ELSE (for the ELSE branches). Default is 256.\n\n\nExample of usage:\n\n  max_recursive_level=500\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "max_while_loops",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe parameters set the value of maximum loops that can be done within a \u201cwhile\u201d. Comes as a protection to avoid infinite loops in config file execution. Default is 100.  Setting to 0 disables the protection (you will still get a warning when you start Kamailio if you do something like while(1) {\u2026}).\n\n\nExample of usage:\n\n  max_while_loops=200\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mcast",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThis parameter can be used to set the interface that should join the multicast group. This is useful if you want to listen on a multicast address and don't want to depend on the kernel routing table for choosing an interface.\n\n\nThe parameter is reset after each listen parameter, so you can join the right multicast group on each interface without having to modify kernel routing beforehand.\n\n\nExample of usage:\n\n  mcast=eth1\n  listen=udp:224.0.1.75:5060\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mcast_loopback",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIt can be 'yes' or 'no'. If set to 'yes', multicast datagram are sent over loopback. Default value is 'no'.\n\n\nExample of usage:\n\n  mcast_loopback=yes\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mcast_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the value for multicast ttl. Default value is OS specific (usually 1).\n\n\nExample of usage:\n\n  mcast_ttl=32\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "memdbg",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: mem_dbg\n\n\nThis parameter specifies on which log level the memory debugger messages will be logged. If memdbg is active, every request (alloc, free) to the memory manager will be logged. (Note: if compile option NO_DEBUG is specified, there will never be logging from the memory manager).\n\n\nDefault value: L_DBG (memdbg=3)\n\n\nFor example, memdbg=2 means that memory debugging is activated if the debug level is 2 or higher.\n\ndebug=3    # no memory debugging as debug level \nmemdbg=4   # is lower than memdbg\ndebug=3    # memory debugging is active as the debug level \nmemdbg=2   # is higher or equal memdbg\n\nPlease see also memlog and debug.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "memlog",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: mem_log\n\n\nThis parameter specifies on which log level the memory statistics will be logged. If memlog is active, Kamailio will log memory statistics on shutdown (or if requested via signal SIGUSR1). This can be useful for debugging of memory leaks. \n\n\nDefault value: L_DBG (memlog=3) \n\n\nFor example, memlog=2 means that memory statistics dumping is activated if the debug level is 2 or higher.\n\ndebug=3    # no memory statistics as debug level \nmemlog=4   # is lower than memlog\ndebug=3    # dumping of memory statistics is active as the \nmemlog=2   # debug level is higher or equal memlog\n\nPlease see also memdbg and debug.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mem_join",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 1, memory manger (e.g., q_malloc) does join of free fragments. It is effective if MEM_JOIN_FREE compile option is defined.\n\n\nIt can be set via config reload framework.\n\n\nDefault is 0 (disabled).\n\nmem_join=1\n\nTo change its value at runtime, kamcmd needs to be used and the modules ctl and cfg_rpc loaded. Enabling it can be done with:\n\nkamcmd cfg.set_now_int core mem_join 1\n\nTo disable, set its value to 0.\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mem_safety",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 1, memory free operation does not call abort() for double freeing a pointer or freeing an invalid address. The server still prints the alerting log messages. If set to 0, the SIP server stops by calling abort() to generate a core file.\n\n\nIt can be set via config reload framework.\n\n\nDefault is 1 (enabled).\n\nmem_safety=0\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mem_status_mode",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 1, memory status dump for qm allocator will print details about used fragments. If set to 0, the dump contains only free fragments. It can be set at runtime via cfg param framework (e.g., via kamcmd).\n\n\nDefault is 0.\n\nmem_status_mode=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mem_summary",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nParameter to control printing of mmemory debugging information displayed on exit or SIGUSR1. The value can be composed by following flags:\n\n\n 1 - dump all the pkg used blocks (status)\n\n 2 - dump all the shm used blocks (status)\n\n 4 - summary of pkg used blocks\n\n 8 - summary of shm used blocks\n\n\n\nIf set to 0, nothing is printed.\n\n\nDefault value: 3\n\n\nExample:\n\nmem_summary=15\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mhomed",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the server to try to locate outbound interface on multihomed host. This parameter affects the selection of the outgoing socket for forwarding requests. By default is off (0) - it is rather time consuming. When deactivated, the incoming socket will be used or the first one for a different protocol, disregarding the destination location. When activated, Kamailio will select a socket that can reach the destination (to be able to connect to the remote address). (Kamailio opens a UDP socket to the destination, then it retrieves the local IP which was assigned by the operating system to the new UDP socket. Then this socket will be closed and the retrieved IP address will be used as IP address in the Via/Record-Route headers)\n\n\nExample of usage:\n\n  mhomed=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "mlock_pages",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLocks all Kamailio pages into memory making it unswappable (in general one doesn't want his SIP proxy swapped out )\n\nmlock_pages = yes |no (default no)\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "modinit_delay",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of microseconds to wait after initializing a module - useful to cope with systems where are rate limits on new connections to database or other systems.\n\n\nDefault value is 0 (no wait).\n\nmodinit_delay=100000\n"
    },
    {
        "description": "\n\nThe modparam command will be used to set the options of the modules. \n\n\nExample:\n\nmodparam(usrloc, db_mode, 2)\nmodparam(usrloc, nat_bflag, 6)\n\nSee the documenation of the respective module to find out the available options.\n\n",
        "snippet": "modparam(${1: arg1},${2: arg2},${3: arg3})",
        "text": "modparam",
        "type": "variable",
        "rightLabel": "Core parameters",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Core parameters",
        "text": "onsend_route_reply",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set to 1 (yes, on), onsend_route block is executed for received replies that are sent out. Default is 0.\n\n  onsend_route_reply=yes\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "open_files_limit",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf set and bigger than the current open file limit, Kamailio will try to increase its open file limit to this number. Note: Kamailio must be started as root to be able to increase a limit past the hard limit (which, for open files, is 1024 on most systems). \u201cFiles\u201d include network sockets, so you need one for every concurrent session (especially if you use connection-oriented transports, like TCP/TLS).\n\n\nExample of usage:\n\n  open_files_limit=2048\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "phone2tel",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nBy enabling this feature, Kamailio internally treats SIP URIs with user=phone parameter as TEL URIs. If you do not want this behavior, you have to turn it off. \n\n\nDefault value: 1 (enabled)\n\nphone2tel = 0\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "pmtu_discovery",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf enabled, the Don't Fragment (DF) bit will be set in outbound IP packets.\n\npmtu_discovery = 0 | 1 (default 0)\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe port the SIP server listens to. The default value for it is 5060.\n\n\nExample of usage:\n\n  port=5080\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "pv_buffer_size",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe size in bytes of internal buffer to print dynamic strings with pseudo-variables inside. The default value is 8192 (8kB).\n\n\nExample of usage:\n\npv_buffer_size=2048\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "pv_buffer_slots",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe number of internal buffer slots to print dynamic strings with pseudo-variables inside. The default value is 10.\n\n\nExample of usage:\n\npv_buffer_slots=12\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "rundir",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias: run_dir\n\n\nSet the folder for creating runtime files such as MI fifo or CTL unixsocket.\n\n\nDefault: /var/run/kamailio\n\n\nExample of usage:\n\nrundir=/tmp\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "reply_to_via",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf it is set to 1, any local reply is sent to the IP address advertised in top most Via of the request instead of the IP address from which the request was received. Default value is 0 (off).\n\n\nExample of usage:\n\n  reply_to_via=0\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "server_id",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nA configurable unique server id that can be used to discriminate server instances within a cluster of servers when all other  information, such as IP addresses are the same.\n\n  server_id = number\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "server_header",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the value of Server header for replies generated by Kamailio. It must contain the header name, but not the ending CRLF.\n\n\nExample of usage:\n\nserver_header=Server: My Super SIP Server\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "server_signature",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThis parameter controls the \u201cServer\u201d header in any locally generated message. \n\n\nExample of usage:\n\n   server_signature=no\n\nIf it is enabled (default=yes) a header is generated as in the following example:\n\n   Server: Kamailio (version (arch/os))\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "shm_force_alloc",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTries to pre-fault all the shared memory, before starting. When \u201con\u201d, start time will increase, but combined with mlock_pages will guarantee Kamailio will get all its memory from the beginning (no more kswapd slow downs)\n\n\nshm_force_alloc = yes | no (default no)\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "shm_mem_size",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet shared memory size (in Mb).\n\n\nshm_mem_size = 64 (default 64)\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "sip_warning (noisy feedback)",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nCan be 0 or 1. If set to 1 (default value) a 'Warning' header is added to each reply generated by Kamailio.\nThe header contains several details that help troubleshooting using the network traffic dumps, but might reveal details of your network infrastructure and internal SIP routing.\n\n\nExample of usage:\n\n  sip_warning=0\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "socket_workers",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of workers to process SIP traffic per listen socket - typical use is before a listen global parameter.\n\n\n when used before listen on UDP or SCTP socket, it overwrites children or sctp_children value for that socket.\n\n when used before listen on TCP or TLS socket, it adds extra tcp workers, these handling traffic only on that socket.\n\n\n\nThe value of socket_workers is reset with next listen socket definition that is added, thus use it for each listen socket where you want custom number of workers.\n\n\nIf this parameter is not used at all, the values for children, tcp_children and sctp_children are used as usually.\n\n\nExample for udp sockets:\n\nchildren=4\nsocket_workers=2\nlisten=udp:127.0.0.1:5080\nlisten=udp:127.0.0.1:5070\nlisten=udp:127.0.0.1:5060\n\n it will start 2 workers to handle traffic on udp:127.0.0.1:5080 and 4 for each of udp:127.0.0.1:5070 and udp:127.0.0.1:5060. In total there are 10 worker processes\n\n\n\nExample for tcp sockets:\n\nchildren=4\nsocket_workers=2\nlisten=tcp:127.0.0.1:5080\nlisten=tcp:127.0.0.1:5070\nlisten=tcp:127.0.0.1:5060\n\n it will start 2 workers to handle traffic on tcp:127.0.0.1:5080 and 4 to handle traffic on both tcp:127.0.0.1:5070 and tcp:127.0.0.1:5060. In total there are 6 worker processes\n\n\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "sql_buffer_size",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe size in bytes of the SQL buffer created for data base queries. For database drivers that use the core db_query library, this will be maximum size object that can be written or read from a database. Default value is 65535.\n\n\nExample of usage:\n\n  sql_buffer_size=131070\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "statistics",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nKamailio has built-in support for statistics counter. This means, these counters can be increased, decreased, read and cleared. The statistics counter are defined either by the core (e.g. tcp counters), by modules (e.g. 2xx_transactions by \u201ctmx\u201d module) or by the script writer using the \u201cstatistics\u201d module.\n\n\nThe statistics counters are read/updated either automatically by Kamailio internally (e.g. tcp counters), by the script writer via the module functions of the \u201cstatistics\u201d module, by the script writer using the $stat() pseudo variable (read-only), or via MI commands.\n\n\nFollowing are some examples how to access statistics variables:\n\n\nscript\n\nmodparam(statistics, variable, NOTIFY)\n\n(if method == NOTIFY) {\n  update_stat(NOTIFY, +1);\n}\n\nxlog(Number of received NOTIFYs: $stat(NOTIFY));\n\nMI\n\n# get counter value\nkamctl fifo get_statistics NOTIFY\n# set counter to zero\nkamctl fifo reset_statistics NOTIFY\n# get counter value and then set it to zero\nkamctl fifo clear_statistics NOTIFY\n\n# or use the kamcmd tool\nkamcmd mi get_statistics 1xx_replies\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "tos",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe TOS (Type Of Service) to be used for the sent IP packages (both TCP and UDP).\n\n\nExample of usage:\n\n  tos=IPTOS_LOWDELAY\n  tos=0x10\n  tos=IPTOS_RELIABILITY\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "udp_mtu",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nFallback to another protocol (udp_mtu_try_proto must be set also either globally or per packet) if the constructed request size is greater then udp_mtu.\n\n\nRFC 3261 specified size: 1300. Default: 0 (off).\n\nudp_mtu = number\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "udp_mtu_try_proto",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf udp_mtu !=0 and udp forwarded request size (after adding all the \u201clocal\u201d headers)  udp_mtu, use this protocol instead of udp. Only the Via header will be updated (e.g. The Record-Route will be the one built for udp).\n\n\nWarning: Although RFC3261 mandates automatic transport protocol changing, enabling this feature can lead to problems with clients which do not support other protocols or are behind a firewall or NAT. Use this only when you know what you do!\n\n\nSee also udp_mtu_try_proto(proto) function.\n\n\nDefault: UDP (off). Recommended: TCP.\n\nudp_mtu_try_proto = TCP|TLS|SCTP|UDP\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "user",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: uid\n\n\nThe user id to run Kamailio (Kamailio will suid to it).\n\n\nExample of usage:\n\n    user=kamailio\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "user_agent_header",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the value of User-Agent header for requests generated by Kamailio. It must contain header name as well, but not the ending CRLF.\n\nuser_agent_header=User-Agent: My Super SIP Server\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "verbose_startup",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nControl if printing routing tree and udp probing buffer debug messages should be printed at startup.\n\n\nDefault is 0 (don't print); set to 1 to get those debug messages.\n\n\nExample of usage:\n\n   verbose_startup=1\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "version_table",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the name of the table holding the table version. Usefull if the proxy is sharing a database within a project and during upgrades. Default value is \u201cversion\u201d.\n\n\nExample of usage:\n\n   version_table=version44\n"
    },
    {
        "rightLabel": "Core parameters",
        "text": "workdir",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: wdir\n\n\nThe working directory used by Kamailio at runtime. You might find it useful when it comes to generating core files :)\n\n\nExample of usage:\n\n   wdir=/usr/local/kamailio\n   or\n   wdir=/usr/kam_wd\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThis parameter controls if the SIP server will try doing a DNS lookup on the address in the Via header of a received sip request to decide if adding a received=src_ip parameter to the Via is necessary. Note that Vias containing\nDNS names (instead of IPs) should have received= added, so turning dns to yes is not recommended.\n\n\nDefault is no.\n\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "rev_dns",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThis parameter controls if the SIP server will try doing a reverse DNS lookup on the source IP of a sip request\nto decide if adding a received=src_ip parameter to the Via is necessary (if the Via contains a DNS name instead of an IP address, the result of the reverse dns on the source IP will be compared with the DNS name in the Via).\nSee also dns (the effect is cumulative, both can be turned on and in that case if the DNS lookup test fails the reverse\n DNS test will be tried).\nNote that Vias containing DNS names (instead of IPs) should have received= added, so turning rev_dns to yes is not recommended. \n\n\nDefault is no.\n\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_del_nonexp",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: dns_cache_delete_nonexpired\n\ndns_cache_del_nonexp = yes | no (default: no) \n  allow deletion of non-expired records from the cache when there is no more space\n  left for new ones. The last-recently used entries are deleted first.\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_rec_pref",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\ndns_cache_rec_pref = number (default 0)\n  dns cache record preference, determines how new DNS records are stored internally in relation to existing entries.\n  Possible values:\n    0 - do not check duplicates\n    1 - prefer old records\n    2 - prefer new records\n    3 - prefer records with longer lifetime\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_flags",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\ndns_cache_flags = number (default 0) - \n  dns cache specific resolver flags, used for overriding the default behaviour (low level).\n  Possible values:\n    1 - ipv4 only: only DNS A requests are performed, even if Kamailio also listens on ipv6 addresses.\n    2 - ipv6 only: only DNS AAAA requests are performed. Ignored if dns_try_ipv6 is off or Kamailio \n        doesn't listen on any ipv6 address.\n    4 - prefer ipv6: try first to resolve a host name to an ipv6 address (DNS AAAA request) and only\n        if this fails try an ipv4 address (DNS A request). By default the ipv4 addresses are preferred.\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_gc_interval",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nInterval in seconds after which the dns cache is garbage collected (default: 120 s)\n\ndns_cache_gc_interval = number\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_init",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf off, the dns cache is not initialized at startup and cannot be enabled runtime, that saves some memory.\n\ndns_cache_init = on | off (default on)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_max_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\ndns_cache_max_ttl = time in seconds (default MAXINT)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_mem",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum memory used for the dns cache in KB (default 500 K)\n\ndns_cache_mem = number\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_min_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\ndns_cache_min_ttl = time in seconds (default 0)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_cache_negative_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTells how long to keep negative DNS responses in cache.  If set to 0, disables caching of negative responses. Default is 60 (seconds).\n\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_naptr_ignore_rfc",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf the DNS lookup should ignore the remote side's protocol preferences, as indicated by the Order field in the NAPTR records and mandated by RFC 2915.\n\n  dns_naptr_ignore_rfc = yes | no (default yes)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_retr_no",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of dns retransmissions before giving up. Default value is system specific, depends also on the '/etc/resolv.conf' content (usually 4).\n\n\nExample of usage:\n\n  dns_retr_no=3\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_retr_time",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTime in seconds before retrying a dns request. Default value is system specific, depends also on the '/etc/resolv.conf' content (usually 5s).\n\n\nExample of usage:\n\n  dns_retr_time=3\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_search_full_match",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nWhen name was resolved using dns search list, check the domain added in the answer matches with one from the search list (small performance hit, but more safe)\n\ndns_search_full_match = yes | no (default yes)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_servers_no",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nHow many dns servers from the ones defined in '/etc/resolv.conf' will be used. Default value is to use all of them.\n\n\nExample of usage:\n\n  dns_servers_no=2\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_srv_lb",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: dns_srv_loadbalancing\n\n\nEnable dns srv weight based load balancing (see doc/dns.txt)\n\ndns_srv_lb = yes | no (default no)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_try_ipv6",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nCan be 'yes' or 'no'. If it is set to 'yes' and a DNS lookup fails, it will retry it\nfor ipv6 (AAAA record). Default value is 'no'.\n\n\nNote: If dns_try_ipv6 is off, no hostname resolving that would result in an ipv6 address would succeed - it doesn't matter if an actual DNS lookup is to be performed or the host is already an ip address. Thus, if the proxy should forward requests to IPv6 targets, this option must be turned on!\n\n\nExample of usage:\n\n  dns_try_ipv6=yes\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_try_naptr",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnable NAPTR support according to RFC 3263 (see doc/dns.txt for more info)\n\n  \ndns_try_naptr = yes | no (default no)\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_sctp_pref, dns_tcp_pref, dns_tls_pref, dns_udp_pref",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: dns_sctp_preference, dns_tcp_preference, dns_tls_preference, dns_udp_preference\n\n\nSet preference for each protocol when doing naptr lookups. By default dns_udp_pref=30, dns_tcp_pref=20, \ndns_tls_pref=10 and dns_sctp_pref=20. To use the remote site preferences set all dns_*_pref to the same positive value (e.g. dns_udp_pref=1,\ndns_tcp_pref=1, dns_tls_pref=1, dns_sctp_pref=1). To completely ignore NAPTR records for a specific protocol, set the corresponding protocol \npreference to -1 (or any other negative number). (see doc/dns.txt for more info)\n\ndns_{udp,tcp,tls,sctp}_pref = number\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "dns_use_search_list",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nCan be 'yes' or 'no'. If set to 'no', the search list in '/etc/resolv.conf' will be ignored (\u21d2 fewer lookups \u21d2 gives up faster). Default value is 'yes'.\n\n\nHINT: even if you don't have a search list defined, setting this option to 'no' will still be \u201cfaster\u201d, because an empty search list is in fact search \u201c\u201d (so even if the search list is empty/missing there will still be 2 dns queries, eg. foo+'.' and foo+\u201c\u201d+'.')\n\n\nExample of usage:\n\n  dns_use_search_list=no\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "use_dns_cache",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTells if DNS responses are cached - this means that the internal DNS resolver (instead of the system's stub resolver) will be used.  If set to \u201coff\u201d, disables caching of DNS responses and, as side effect, DNS failover. Default is \u201con\u201d. Settings can be changed also during runtime (switch from internal to system resolver and back).\n\n"
    },
    {
        "rightLabel": "DNS Parameters",
        "text": "use_dns_failover",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nuse_dns_failover = on | off (default off)\n\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "disable_tcp",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nGlobal parameter to disable TCP support in the SIP server. Default value is 'no'.\n\n\nExample of usage:\n\n  disable_tcp=yes\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_accept_aliases",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf a message received over a tcp connection has \u201calias\u201d in its via a new tcp alias port will be created for the connection the message came from (the alias port will be set to the via one).\n\n\nBased on draft-ietf-sip-connect-reuse-00.txt, but using only the port (host aliases are dangerous, involve extra DNS lookups and the need for them is questionable)\n\n\nSee force_tcp_alias for more details.\n\n\nNote: For NAT traversal of TCP clients it is better to not use tcp_accept_aliases but just use nathelper module and fix_nated_[contact|register] functions.\n\n\nDefault is \u201cno\u201d (off)\n\n tcp_accept_aliases= yes|no\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_accept_hep3",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnable internal TCP receiving stack to accept HEP3 packets. This option has to be set to yes on a Kamailio instance acting as Homer SIPCapture server that is supposed to receive HEP3 packets over TCP/TLS.\n\n\nDefault value is no.\n\ntcp_accept_hep3=yes\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_accept_no_cl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nControl whether to throw or not error when there is no Content-Length header for requests received over TCP. It is required to be set to yes for XCAP traffic sent over HTTP/1.1 which does not use Content-Length header, but splits large bodies in many chunks. The module sanity can be used then to restrict this permission to HTTP traffic only, testing in route block in order to stay RFC3261 compliant about this mandatory header for SIP requests over TCP.\n\n\nDefault value is no.\n\ntcp_accept_no_cl=yes\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_async",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: tcp_buf_write\n\n\nIf enabled, all the tcp writes that would block / wait for connect to finish, will be queued and attempted latter (see also tcp_conn_wq_max and tcp_wq_max).\n\n\nNote: It also applies for TLS.\n\ntcp_async = yes | no (default yes)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_children",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of children processes to be created for reading from TCP connections. If no value is explicitly set, the same number of TCP children as UDP children (see \u201cchildren\u201d parameter) will be used.\n\n\nExample of usage:\n\n  tcp_children=4\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_clone_rcvbuf",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nControl if the received buffer should be cloned from the TCP stream, needed by functions working inside the SIP message buffer (such as msg_apply_changes()).\n\n\nDefault is 0 (don't clone), set it to 1 for cloning.\n\n\nExample of usage:\n\n  tcp_clone_rcvbuf=1\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_connection_lifetime",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLifetime in seconds for TCP sessions. TCP sessions which are inactive for longer than tcp_connection_lifetime will be closed by Kamailio. Default value is defined is 120. Setting this value to 0 will close the TCP connection pretty quick .\n\n\nNote: As many SIP clients are behind NAT/Firewalls, the SIP proxy should not close the TCP connection as it is not capable of opening a new one.\n\n\nExample of usage:\n\n  tcp_connection_lifetime=3605\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_connect_timeout",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTime in seconds before an ongoing attempt to establish a new TCP connection will be aborted. Lower this value for faster detection of TCP connection problems. The default value is 10s.\n\n\nExample of usage:\n\n  tcp_connect_timeout=5\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_conn_wq_max",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum bytes queued for write allowed per connection. Attempting to queue more bytes would result in an error and in the connection being closed (too slow). If tcp_write_buf is not enabled, it has no effect.\n\ntcp_conn_wq_max = bytes (default 32 K)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_crlf_ping",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnable SIP outbound TCP keep-alive using PING-PONG (CRLFCRLF -  CRLF).\n\ntcp_crlf_ping = yes | no default: yes\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_defer_accept",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTcp accepts will be delayed until some data is received (improves performance on proxies with lots of opened tcp connections). See linux tcp(7) TCP_DEFER_ACCEPT or freebsd ACCF_DATA(0). For now linux and freebsd only.\n\n\nWARNING: the  linux TCP_DEFER_ACCEPT is buggy (\u21d02.6.23) and doesn't work exactly as expected (if no data is received it will retransmit syn acks for ~ 190 s, irrespective of the set timeout and then it will silently drop the connection without sending a RST or FIN). Try to use it together with tcp_syncnt (this way the number of retrans. SYNACKs can be limited \u21d2 the timeout can be controlled in some way).\n\n\nOn FreeBSD:\n\ntcp_defer_accept =  yes | no (default no)\n\nOn Linux:\n\ntcp_defer_accept =  number of seconds before timeout (default disabled)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_delayed_ack",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nInitial ACK for opened connections will be delayed and sent with the first data segment (see linux tcp(7) TCP_QUICKACK). For now linux only.\n\ntcp_delayed_ack  = yes | no (default yes when supported)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_fd_cache",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf enabled FDs used for sending will be cached inside the process calling tcp_send (performance increase for sending over tcp at the cost of slightly slower connection closing and extra FDs kept open)\n\ntcp_fd_cache = yes | no (default yes)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_keepalive",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnables keepalive for tcp (sets SO_KEEPALIVE socket option)\n\ntcp_keepalive = yes | no (default yes)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_keepcnt",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of keepalives sent before dropping the connection (TCP_KEEPCNT socket option). Linux only.\n\ntcp_keepcnt = number (not set by default)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_keepidle",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTime before starting to send keepalives, if the connection is idle (TCP_KEEPIDLE socket option). Linux only.\n\ntcp_keepidle  = seconds (not set by default)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_keepintvl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTime interval between keepalive probes, when the previous probe failed (TCP_KEEPINTVL socket option). Linux only.\n\ntcp_keepintvl = seconds (not set by default)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_linger2",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nLifetime of orphaned sockets in FIN_WAIT2 state (overrides tcp_fin_timeout on, see linux tcp(7) TCP_LINGER2). Linux only.\n\ntcp_linger2 = seconds (not set by default)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_max_connections",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum number of tcp connections (if the number is exceeded no new tcp connections will be accepted). Default is defined in tcp_init.h: #define DEFAULT_TCP_MAX_CONNECTIONS 2048\n\n\nExample of usage:\n\n  tcp_max_connections=4096\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_no_connect",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nStop outgoing TCP connects (also stops TLS) by setting tcp_no_connect to yes. \n\n\nYou can do this any time, even even if Kamailio is already started (in this case using the command \u201ckamcmd cfg.set_now_int tcp no_connect 1\u201d).\n\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_poll_method",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nPoll method used (by default the best one for the current OS is selected). For available types see io_wait.c and poll_types.h: none, poll, epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll\n\n\nExample of usage:\n\n  tcp_poll_method=select\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_rd_buf_size",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nBuffer size used for tcp reads. A high buffer size increases performance on server with few connections and lot of traffic on them, but also increases memory consumption (so for lots of connection is better to use a low value). Note also that this value limits the maximum message size (SIP, HTTP) that can be received over tcp. \n\n\nThe value is internally limited to 16MByte, for higher values recompile Kamailio with higher limit in tcp_options.c (search for \u201crd_buf_size\u201d and 16777216). Further, you may need to increase the private memory, and if you process the message stateful you may also have to increase the shared memory.\n\n\nDefault: 4096, can be changed at runtime.\n\ntcp_rd_buf_size=65536\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_send_timeout",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTime in seconds after a TCP connection will be closed if it is not available for writing in this interval (and Kamailio wants to send something on it). Lower this value for faster detection of broken TCP connections. The default value is 10s.\n\n\nExample of usage:\n\n  tcp_send_timeout=3\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_source_ipv4, tcp_source_ipv6",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSet the source IP for all outbound TCP connections. If setting of the IP fails, the TCP connection will use the default IP address.\n\ntcp_source_ipv4 = IPv4 address\ntcp_source_ipv6 = IPv6 address\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_syncnt",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of SYN retransmissions before aborting a connect attempt (see linux tcp(7) TCP_SYNCNT). Linux only.\n\ntcp_syncnt = number of syn retr. (default not set)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_wq_blk_size",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nBlock size used for tcp async writes. It should be big enough to hold a few datagrams. If it's smaller then a datagram (in fact a tcp write()) size, it will be rounded up. It has no influenced on the number of datagrams queued (for that see tcp_conn_wq_max or tcp_wq_max). It has mostly debugging and testing value (can be ignored).\n\n\nDefault: 2100 (~ 2 INVITEs), can be changed at runtime.\n\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_wq_max",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum bytes queued for write allowed globally. It has no effect if tcp_write_buf is not enabled.\n\ntcp_wq_max = bytes (default 10 Mb)\n"
    },
    {
        "rightLabel": "TCP Parameters",
        "text": "tcp_reuse_port",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAllows reuse of TCP ports. This means,for example, that the same TCP ports on which Kamailio is listening on, can be used as source ports of new TCP connections when acting as an UAC. Kamailio must have been compiled in a system implementing SO_REUSEPORT (Linux  3.9.0, FreeBSD, OpenBSD, NetBSD, MacOSX). This parameter takes effect only if also the system on which Kamailio is running on supports SO_REUSEPORT.\n\ntcp_reuse_port = yes (default no)\n"
    },
    {
        "rightLabel": "TLS Parameters",
        "text": "tls_port_no",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nThe port the SIP server listens to for TLS connections.\n\n\nDefault value is 5061.\n\n\nExample of usage:\n\n  tls_port_no=6061\n"
    },
    {
        "rightLabel": "TLS Parameters",
        "text": "tls_max_connections",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum number of ls connections (if the number is exceeded no new ls connections will be accepted). It cannot exceed tcp_max_connections.\n\n\nDefault value is 2048.\n\n\nExample of usage:\n\n  tls_max_connections=4096\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "disable_sctp",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nGlobal parameter to disable SCTP support in the SIP server. see enable_sctp\n\n\nDefault value is 'auto'.\n\n\nExample of usage:\n\n  disable_sctp=yes\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "enable_sctp",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\nenable_sctp = 0/1/2  - SCTP disabled (0)/ SCTP enabled (1)/auto (2), \n                       default auto (2)\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_children",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nsctp children no (similar to udp children)\n\nsctp_children = number \n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_socket_rcvbuf",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSize for the sctp socket receive buffer\n\n\nAlias name: sctp_socket_receive_buffer\n\nsctp_socket_rcvbuf = number \n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_socket_sndbuf",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSize for the sctp socket send buffer\n\n\nAlias name: sctp_socket_send_buffer\n\nsctp_socket_sndbuf = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_autoclose",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of seconds before autoclosing an idle association (default: 180 s). Can be changed at runtime, but it will affect only new associations. E.g.:\n\n$ kamcmd cfg.set_now_int sctp autoclose 120\nsctp_autoclose = seconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_send_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of milliseconds before an unsent message/chunk is dropped (default: 32000 ms or 32 s). Can be changed at runtime, e.g.:\n\n$ kamcmd cfg.set_now_int sctp send_ttl 180000\nsctp_send_ttl = milliseconds - n\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_send_retries",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nHow many times to attempt re-sending a message on a re-opened association, if the sctp stack did give up sending it (it's not related to sctp protocol level retransmission). Useful to improve reliability with peers that reboot/restart or fail over to another machine. \n\n\nWARNING: use with care and low values (e.g. 1-3) to avoid \u201cmultiplying\u201d traffic to unresponding hosts (default: 0).Can be changed at runtime.\n\nsctp_send_retries = 1\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_assoc_tracking",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nControls whether or not sctp associations are tracked inside Kamailio. Turning it off would result in less memory being used and slightly better performance, but it will also disable some other features that depend on it (e.g. sctp_assoc_reuse). Default: yes.\n\n\nCan be changed at runtime (\u201ckamcmd sctp assoc_tracking 0\u201d), but changes will be allowed only if all the other features that depend on it are turned off (for example it can be turned off only if first sctp_assoc_reuse was turned off).\n\n\nNote: turning sctp_assoc_tracking on/off will delete all the tracking information for all the currently tracked associations and might introduce a small temporary delay in the sctp processing if lots of associations were tracked.\n\n\nConfig options depending on sctp_assoc_tracking being on: sctp_assoc_reuse.\n\nsctp_assoc_tracking = yes/no\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_assoc_reuse",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nControls sctp association reuse. For now only association reuse for replies is affected by it. Default: yes.\nDepends on sctp_assoc_tracking being on. \n\n\nNote that even if turned off, if the port in via corresponds to the source port of the association the request was sent on or if rport is turned on (force_rport() or via containing a rport option), the association will be automatically reused by the sctp stack.\nCan be changed at runtime (sctp assoc_reuse), but it can be turned on only if sctp_assoc_tracking is on.\n\nsctp_assoc_reuse = yes/no\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_max_assocs",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum number of allowed open sctp associations. -1 means maximum allowed by the OS. Default: -1.\nCan be changed at runtime (e.g.:  \u201ckamcmd cfg.set_now_int sctp max_assocs 10\u201d). When the maximum associations number is exceeded and a new associations is opened by a remote host, the association will be immediately closed. However it is possible that some SIP packets get through (especially if they are sent early, as part of the 4-way handshake).\n\n\nWhen Kamailio tries to open a new association and the max_assocs is exceeded the exact behaviour depends on whether or not\nsctp_assoc_tracking is on. If on, the send triggering the active open will gracefully fail, before actually opening the new association and no packet will be sent. However if sctp_assoc_tracking is off, the association will first be opened and then immediately closed. In general this means that the initial sip packet will be sent (as part of the 4-way handshake).\n\nsctp_max_assocs = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_srto_initial",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nInitial value of the retr. timeout, used in RTO calculations (default: OS specific). \n\n\nCan be changed at runtime (sctp srto_initial) but it will affect only new associations.\n\nsctp_srto_initial = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_srto_max",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum value of the retransmission timeout (RTO) (default: OS specific).\n\n\nWARNING: values lower then the sctp sack_delay will cause lots of retransmissions and connection instability (see sctp_srto_min for more details).\n\n\nCan be changed at runtime (sctp srto_max) but it will affect only new associations.\n\nsctp_srto_max = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_srto_min",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMinimum value of the retransmission timeout (RTO) (default: OS specific).\n\n\nWARNING: values lower then the sctp sack_delay of any peer might cause retransmissions and possible interoperability problems. According to the standard the sack_delay should be between 200 and 500 ms, so avoid trying values lower then 500 ms unless you control all the possible sctp peers and you do make sure their sack_delay is higher or their sack_freq is 1.\n\n\nCan be changed at runtime (sctp srto_min) but it will affect only new associations.\n\nsctp_srto_min = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_asocmaxrxt",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum retransmissions attempts per association (default: OS specific). It should be set to sctp_pathmaxrxt * no. of expected paths.\n\n\nCan be changed at runtime (sctp asocmaxrxt) but it will affect only new associations.\n\nsctp_asocmaxrxt   = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_init_max_attempts",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum INIT retransmission attempts (default: OS specific).\n\n\nCan be changed at runtime (sctp init_max_attempts).\n\nsctp_init_max_attempts = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_init_max_timeo",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum INIT retransmission timeout (RTO max for INIT). Default: OS specific.\n\n\nCan be changed at runtime (sctp init_max_timeo).\n\nsctp_init_max_timeo = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_hbinterval",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nsctp heartbeat interval. Setting it to -1 will disable the heartbeats. Default: OS specific.\n\n\nCan be changed at runtime (sctp hbinterval) but it will affect only new associations.\n\nsctp_hbinterval = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_pathmaxrxt",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum retransmission attempts per path (see also sctp_asocmaxrxt). Default: OS specific.\n\n\nCan be changed at runtime (sctp pathmaxrxt) but it will affect only new associations.\n\nsctp_pathmaxrxt = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_sack_delay",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nDelay until an ACK is generated after receiving a packet. Default: OS specific.\n\n\nWARNING: a value higher then srto_min can cause a lot of retransmissions (and strange problems). A value higher then srto_max will result in very high connections instability. According to the standard the sack_delay value should be between 200 and 500 ms.\n\n\nCan be changed at runtime (sctp sack_delay) but it will affect only new associations.\n\nsctp_sack_delay = milliseconds\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_sack_freq",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nNumber of packets received before an ACK is sent (without waiting for the sack_delay to expire).  Default: OS specific. \n\n\nNote: on linux with lksctp up to and including 1.0.9 is not possible to set this value (having it in the config will produce a warning on startup).\n\n\nCan be changed at runtime (sctp sack_freq) but it will affect only new associations.\n\nsctp_sack_freq = number\n"
    },
    {
        "rightLabel": "SCTP Parameters",
        "text": "sctp_max_burst",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum burst of packets that can be emitted by an association. Default: OS specific.\n\n\nCan be changed at runtime (sctp max_burst) but it will affect only new associations.\n\nsctp_max_burst = number\n"
    },
    {
        "rightLabel": "UDP Parameters",
        "text": "udp4_raw",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnables raw socket support for sending UDP IPv4 datagrams (40-50% performance increase on linux multi-cpu).\n\n\nPossible values: 0 - disabled (default), 1 - enabled, -1 auto.\n\n\nIn \u201cauto\u201d mode it will be enabled if possible (sr started as root or with CAP_NET_RAW). udp4_raw can be used on Linux and FreeBSD. For other BSDs and Darwin one must compile with -DUSE_RAW_SOCKS. On Linux one should also set udp4_raw_mtu if the MTU on any network interface that could be used for sending is smaller then 1500.\n\n\nThe parameter can be set at runtime as long as sr was started with enough privileges (core.udp4_raw).\n\nudp4_raw = on\n"
    },
    {
        "rightLabel": "UDP Parameters",
        "text": "udp4_raw_mtu",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMTU value used for UDP IPv4 packets when udp4_raw is enabled.  It should be set to the minimum MTU of all the network interfaces that could be used for sending. The default value is 1500. Note that on BSDs it does not need to be set (if set it will be ignored, the proper MTU will be used automatically by the kernel). On Linux it should be set.\n\n\nThe parameter can be set at runtime (core.udp4_raw_mtu).\n\n"
    },
    {
        "rightLabel": "UDP Parameters",
        "text": "udp4_raw_ttl",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nTTL value used for UDP IPv4 packets when udp4_raw is enabled. By default it is set to auto mode (-1), meaning that the same TTL will be used as for normal UDP sockets.\n\n\nThe parameter can be set at runtime (core.udp4_raw_ttl).\n\n"
    },
    {
        "rightLabel": "Blacklist Parameters",
        "text": "dst_blacklist_expire",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: dst_blacklist_ttl\n\n\nHow much time a blacklisted destination will be kept in the blacklist (w/o any update).\n\ndst_blacklist_expire = time in s (default 60 s)\n"
    },
    {
        "rightLabel": "Blacklist Parameters",
        "text": "dst_blacklist_gc_interval",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nHow often the garbage collection will run (eliminating old, expired entries).\n\ndst_blacklist_gc_interval = time in s (default 60 s)\n"
    },
    {
        "rightLabel": "Blacklist Parameters",
        "text": "dst_blacklist_init",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nIf off, the blacklist is not initialized at startup and cannot be enabled runtime, that saves some memory.\n\ndst_blacklist_init = on | off (default on)\n"
    },
    {
        "rightLabel": "Blacklist Parameters",
        "text": "dst_blacklist_mem",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nMaximum shared memory amount used for keeping the blacklisted destinations.\n\ndst_blacklist_mem = size in Kb (default 250 Kb)\n"
    },
    {
        "rightLabel": "Blacklist Parameters",
        "text": "use_dst_blacklist",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nEnable the destination blacklist: Each failed send attempt will cause the destination to be added to the blacklist. Before any send, this blacklist will be checked and if a match is found, the send is no longer attempted (an error is returned immediately). \n\n\nNote: using the blacklist incurs a small performance penalty.\n\n\nSee also doc/dst_blacklist.txt.\n\nuse_dst_blacklist = on | off (default off)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "real_time",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nSets real time priority for all the Kamailio processes, or the timers (bitmask). \n\n   Possible values:   0  - off\n                      1  - the fast timer\n                      2  - the slow timer\n                      4  - all processes, except the timers\n   Example: real_time= 7 = everything switched to real time priority.\nreal_time = int (flags) (default off)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_policy",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nReal time scheduling policy, 0 = SCHED_OTHER, 1= SCHED_RR and 2=SCHED_FIFO\n\nrt_policy= 0..3 (default 0)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_prio",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nReal time priority used for everything except the timers, if real_time is enabled.\n\nrt_prio = int (default 0)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_timer1_policy",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: rt_ftimer_policy\n\n\nLike rt_policy but for the \u201cfast\u201d timer.\n\nrt_timer1_policy=0..3 (default 0)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_timer1_prio",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: rt_fast_timer_prio, rt_ftimer_prio\n\n\nLike rt_prio but for the \u201cfast\u201d timer process (if real_time  1).\n\n   \nrt_timer1_prio=int (default 0)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_timer2_policy",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: rt_stimer_policy\n\n\nLike rt_policy but for the \u201cslow\u201d timer.\n\nrt_timer2_policy=0..3 (default 0)\n"
    },
    {
        "rightLabel": "Real-Time Parameters",
        "text": "rt_timer2_prio",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "variable",
        "description": "\n\nAlias name: rt_stimer_prio\n\n\nLike rt_prio but for the \u201cslow\u201d timer.\n\nrt_timer2_prio=int (default 0)\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "add_local_rport()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAdd rport parameter to local generated Via header \u2013 see RFC3581. In effect for forwarded SIP requests.\n\n\nExample of usage:\n\nadd_local_rport();\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "avpflags()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "break()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\n'break' statement can be used to end a 'case' block in a 'switch' statement or exit from a 'while' statement.\n\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "drop()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nStop the execution of the configuration script and alter the implicit action which is done afterwards.\n\n\nIf the function is called in a 'branch_route' then the branch is discarded (implicit action for 'branch_route' is to forward the request).\n\n\nIf the function is called in the default 'onreply_route' then you can drop any response. If the function is called in a named 'onreply_route' (transaction stateful) then any provisional reply is discarded. (Implicit action for 'onreply_route' is to send the reply upstream according to Via header.)\n\n\nExample of usage:\n\n  onreply_route {\n      if(status==200) {\n          drop(); # this works\n      }\n  }\n  onreply_route[FOOBAR] {\n      if(status==200) {\n          drop(); # this is ignored\n      }\n  }\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "exit()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nStop the execution of the configuration script \u2013 it has the same behaviour as return(0). It does not affect the implicit action to be taken after script execution. \n\nroute {\n  if (route(2)) {\n    xlog(L_NOTICE,method $rm is INVITE\\n);\n  } else {\n    xlog(L_NOTICE,method is $rm\\n);\n  };\n}\nroute[2] {\n  if (is_method(INVITE)) {\n    return(1);\n  } else if (is_method(REGISTER)) {\n    return(-1);\n  } else if (is_method(MESSAGE)) {\n    sl_send_reply(403,IM not allowed);\n    exit;\n  };\n}\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "error()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "exec()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "force_rport()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nForce_rport() adds the rport parameter to the first Via header of the received message. Thus, Kamailio will add the received  port to the top most Via header in the SIP message, even if the client does not indicate support for rport. This enables subsequent SIP messages to return to the proper port later on in a SIP transaction.\n\n\nThis is useful for NAT traversal, to enforce symmetric response signaling.\n\n\nThe rport parameter is defined in RFC 3581.\n\n\nNote: there is also a force_rport parameter which changes the gobal behavior of the SIP proxy.\n\n\nExample of usage:\n\n  force_rport();\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "add_rport()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias for force_rport();\n\n"
    },
    {
        "description": "\n\nForce to send the message from the specified socket (it _must_ be one of the sockets specified with the \u201clisten\u201d directive). If the protocol doesn't match (e.g. UDP message \u201cforced\u201d to a TCP socket) the closest socket of the same protocol is used.\n\n\nExample of usage:\n\n    force_send_socket(10.10.10.10:5060);\n    force_send_socket(udp:10.10.10.10:5060);\n",
        "snippet": "force_send_socket(${1: arg1})",
        "text": "force_send_socket()",
        "type": "function",
        "rightLabel": "Core Functions",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Core Functions",
        "text": "force_tcp_alias()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: add_tcp_alias\n\n\nforce_tcp_alias(port)      \n\n\nadds a tcp port alias for the current connection (if tcp).\nUsefull if you want to send all the trafic to port_alias through\nthe same connection this request came from [it could help \nfor firewall or nat traversal].\nWith no parameters adds the port from the message via as the alias.\nWhen the \u201caliased\u201d connection is closed (e.g. it's idle for too\nmuch time), all the port aliases are removed.\n\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "forward()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nForward the SIP request to destination stored in $du in stateless mode.\n\n\nExample of usage:\n\n  $du = sip:10.0.0.10:5060;transport=tcp;\n  forward();\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "isavpflagset()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "description": "\n\nTest if a flag is set for current processed message (if the flag value is 1). The value of the parameter can be in range of 0..31.\n\n\nFor more see http://www.kamailio.org/dokuwiki/doku.php/tutorials:openser-flag-operations or flags.\n\n\nExample of usage:\n\n  if(isflagset(3)) {\n      log(flag 3 is set\\n);\n  };\n\nKamailio also supports named flags. They have to be declared at the beginning of the config file with:\n\n flags  flag1_name[:position],  flag2_name ...\n\nExample:\n\n     flags test, a:1, b:2 ;\n     route{\n            setflag(test);\n            if (isflagset(a)){ # equiv. to isflagset(1)\n              ....\n            }\n            resetflag(b);  # equiv. to resetflag(2) \n",
        "snippet": "isflagset(${1: arg1})",
        "text": "isflagset()",
        "type": "function",
        "rightLabel": "Core Functions",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Core Functions",
        "text": "is_int()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nChecks if a pseudo variable argument contains integer value. \n\nif(is_int($avp(foobar))) {\n  log(foobar contains an integer\\n);\n}\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "log()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nWrite text message to standard error terminal or syslog. You can specify the log level as first parameter.\n\n\nFor more see: http://www.kamailio.org/dokuwiki/doku.php/tutorials:debug-syslog-messages\n\n\nExample of usage:\n\n  log(just some text message\\n);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "prefix()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAdd the string parameter in front of username in R-URI.\n\n\nExample of usage:\n\n  prefix(00);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "resetavpflag()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "resetflag()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "description": "\n\nThe return() function allows you to return any integer value from a called route() block.\nYou can test the value returned by a route using $retcode or $? variable.\n\n\nreturn(0) is same as exit();\n\n\nIn bool expressions:\n\n\n Negative is FALSE\n\n Positive is TRUE\n\n\n\nIf no value is specified, or a route reaches its end without executing a return statement, it returns 1. If return is used in the top level route is equivalent with exit [val].\n\n\nExample usage: \n\nroute {\n  if (route(2)) {\n    xlog(L_NOTICE,method $rm is INVITE\\n);\n  } else {\n    xlog(L_NOTICE,method $rm is REGISTER\\n);\n  };\n}\nroute[2] {\n  if (is_method(INVITE)) {\n    return(1);\n  } else if (is_method(REGISTER)) {\n    return(-1);\n  } else {\n    return(0);\n  };\n}\n",
        "snippet": "return(${1: arg1})",
        "text": "return()",
        "type": "function",
        "rightLabel": "Core Functions",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Core Functions",
        "text": "revert_uri()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nSet the R-URI to the value of the R-URI as it was when the request was received by server (undo all changes of R-URI).\n\n\nExample of usage:\n\n  revert_uri();\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewritehostport()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: sethostport, sethp\n\n\nRewrite the domain part and port of the R-URI with the value of function's parameter. Other parts of the R-URI like username and URI parameters remain unchanged.\n\n\nExample of usage:\n\n  rewritehostport(1.2.3.4:5080);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewritehostporttrans()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: sethostporttrans, sethpt\n\n\nRewrite the domain part and port of the R-URI with the value of function's parameter. Also allows to specify the transport parameter. Other parts of the R-URI like username and URI parameters remain unchanged.\n\n\nExample of usage:\n\n  rewritehostporttrans(1.2.3.4:5080);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewritehost()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: sethost, seth\n\n\nRewrite the domain part of the R-URI with the value of function's parameter. Other parts of the R-URI like username, port and URI parameters remain unchanged.\n\n\nExample of usage:\n\n  rewritehost(1.2.3.4);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewriteport()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: setport, setp\n\n\nRewrites/sets the port part of the R-URI with the value of function's parameter.\n\n\nExample of usage:\n\n  rewriteport(5070);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewriteuri()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: seturi\n\n\nRewrite the request URI.\n\n\nExample of usage:\n\n  rewriteuri(sip:test@openser.org);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewriteuserpass()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: setuserpass, setup\n\n\nRewrite the password part of the R-URI with the value of function's parameter.\n\n\nExample of usage:\n\n  rewriteuserpass(my_secret_passwd);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "rewriteuser()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nAlias name: setuser, setu\n\n\nRewrite the user part of the R-URI with the value of function's parameter.\n\n\nExample of usage:\n\n  rewriteuser(newuser);\n"
    },
    {
        "description": "\n\nExecute route block given in parameter.  Parameter may be name of the block or a string valued expression.\n\n\nExamples of usage:\n\n  route(REGISTER_REQUEST);\n  route(@received.proto + _proto_ + $var(route_set));\n",
        "snippet": "route(${1: arg1})",
        "text": "route()",
        "type": "function",
        "rightLabel": "Core Functions",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_advertised_address()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nSame as 'advertised_address' but it affects only the current message. It has priority if 'advertised_address' is also set.\n\n\nExample of usage:\n\n  set_advertised_address(openser.org);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_advertised_port()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nSame as 'advertised_port' but it affects only the current message. It has priority over 'advertised_port'.\n\n\nExample of usage:\n\n  set_advertised_port(5080);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_forward_no_connect()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nThe message will be forwarded only if there is already an existing connection to the destination. It applies only to connection oriented protocols like TCP and TLS (TODO: SCTP), for UDP it will be ignored. The behavior depends in which route block the function is called:\n\n\n normal request route: affects stateless forwards and tm. For tm it affects all the branches and the possible retransmissions (in fact there are no retransmission for TCP/TLS).\n\n\n\n onreply_route[0] (stateless): equivalent to set_reply_*() (it's better to use set_reply_* though)\n\n\n\n onreply_route[!=0] (tm): ignored\n\n\n\n branch_route: affects the current branch only (all messages sent on this branch, like possible retransmissions and CANCELs).\n\n\n\n onsend_route: like branch route\n\n\n\nExample of usage:\n\n  route {\n    ...\n    if (lookup()) {\n      //requests to local users. They are usually behind NAT so it does not make sense to try\n      //to establish a new TCP connection \n      set_forward_no_connect();\n      t_relay();\n    }\n    ...\n  }\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_forward_close()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nTry to close the connection (the one on which the message is sent out) after forwarding the current message. Can be used in same route blocks as set_forward_no_connect().\n\n\nNote: Use with care as you might not receive the replies anymore as the connection is closed.\n\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_reply_no_connect()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nLike set_forward_no_connect(), but for replies to the current message (local generated replies and replies forwarded by tm). The behavior depends in which route block the function is called:\n\n\n normal request route: affects all replies sent back on the transaction (either local or forwarded) and all local stateless replies (sl_reply()).\n\n\n\n onreply_route: affects the current reply (so the send_flags set in the onreply_route will be used if the reply for which they were set is the winning final reply or it's a provisional reply that is forwarded)\n\n\n\n branch_route: ignored.\n\n\n\n onsend_route: ignored\n\n\n\nExample of usage:\n\n  route[4] {\n    //requests from local users. There are usually behind NAT so it does not make sense to try\n    //to establish a new TCP connection for the replies\n    set_reply_no_connect();\n    // do authentication and call routing\n    ...\n  }\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "set_reply_close()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nLike set_reply_no_connect, but closes the TCP connection after sending. Can be used in same route blocks as set_reply_no_connect.\n\n\nExample of usage:\n\n  route {\n    ...\n    if (...caller-is-not-registered...) {\n      // reject unregistered client\n      // if request was received via TCP/TLS close the connection, as\n      // this may trigger re-registration of the client.\n      set_reply_close();\n      sl_send_reply(403,REGISTER first);\n      exit;\n    }\n    ...\n  }\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "setavpflag()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "setflag()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nSet a flag for current processed message. The value of the parameter can be in range of 0..31. The flags are used to mark the message for special processing (e.g., accounting) or to keep some state (e.g., message authenticated).\n\n\nFor more see http://www.kamailio.org/dokuwiki/doku.php/tutorials:openser-flag-operations .\n\n\nExample of usage:\n\n  setflag(3);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "strip()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nStrip the first N-th characters from username of R-URI (N is the value of the parameter).\n\n\nExample of usage:\n\n  strip(3);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "strip_tail()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\nStrip the last N-th characters from username of R-URI (N is the value of the parameter).\n\n\nExample of usage:\n\nstrip_tail(3);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "udp_mtu_try_proto(proto)()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n\n proto - TCP|TLS|SCTP|UDP - like udp_mtu_try_proto global parameter but works on a per packet basis and not globally.\n\n\n\nExample:\n\nif($rd==10.10.10.10)\n    udp_mtu_try_proto(SCTP);\n"
    },
    {
        "rightLabel": "Core Functions",
        "text": "userphone()",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "function",
        "description": "\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "request_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nRequest routing block -  is executed for each SIP request.\n\n\nIt contains a set of actions to be executed for SIP requests received from the network. It is the equivalent of *main()* function for handling the SIP requests.\n\n\nFor backward compatibility reasons, the main request 'route' block can be identified by 'route{\u2026}' or 'route[0]{\u2026}'.\n\n\nThe implicit action after execution of the main route block is to drop the SIP request. To send a reply or forward the request, explicit actions (e.g., sl_send_reply(), forward(), t_relay()) must be called inside the route block.\n\n\nExample of usage:\n\n    request_route {\nif(is_method(OPTIONS)) {\n# send reply for each options request\n            sl_send_reply(200, ok);\nexit();\n}\n         route(FWD);\n}\n    route[FWD] {\n# forward according to uri\n         forward();\n}\n"
    },
    {
        "description": "\n\nThis block is used to define 'sub-routes' - group of actions that can be executed from another routing block. Originally targeted as being executed from 'request_route', it can be executed now from all the other blocks. Be sure you put there the actions valid for the root routing block executing the sub-route.\n\n\nThe definition of the sub-route block follows the general rules, with a name in between square brackets and actions between curly braces. A sub-route can return an integer value back to the routing block that executed it. The return code can be retrieved via $rc variables.\n\n\nEvaluation of the return of a subroute is done with following rules:\n\n\n negative value is evaluated as false\n\n 0 - is interpreted as exit\n\n positive value is evaluated as true\n\n\nrequest_route {\nif(route(POSITIVE)) {\n    xlog(return number is positive\\n);\n}\nif( ! route(NEGATIVE)) {\n    xlog(return number is negative\\n);\n}\nif( route(ZERO)) {\n    xlog(this log message does not appear\\n);\n}\n}\n\nroute[POSITIVE] {\nreturn 10;\n}\n\nroute[NEGATIVE] {\nreturn -8;\n}\n\nroute[ZERO] {\nreturn 0;\n}\n\nA sub-route can execute another sub-route. There is a limit to the number of recursive levels, avoiding ending up in infinite loops \u2013 see max_recursive_level global parameter.\n\n\nThe sub-route blocks allow to make the configuration file modular, simplifying the logic and helping to avoid duplication of actions.\n\n",
        "snippet": "route(${1: arg1})",
        "text": "route",
        "type": "value",
        "rightLabel": "Routing Blocks",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "branch_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nRequest's branch routing block. It contains a set of actions to be taken for each branch of a SIP request. It is executed only by TM module after it was armed via t_on_branch(\u201cbranch_route_index\u201d).\n\n\nExample of usage:\n\n    request_route {\n        lookup(location);\n        t_on_branch(OUT);\nif(!t_relay()) {\n            sl_send_reply(500, relaying failed);\n}\n}\n    branch_route[OUT] {\nif(uri=~10\\.10\\.10\\.10) {\n# discard branches that go to 10.10.10.10\n            drop();\n}\n}\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "failure_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nFailed transaction routing block. It contains a set of actions to be taken each transaction that received only negative replies (=300) for all branches. The 'failure_route' is executed only by TM module after it was armed via t_on_failure(\u201cfailure_route_index\u201d).\n\n\nNote that in 'failure_route' is processed the request that initiated the transaction, not the reply .\n\n\nExample of usage:\n\n    request_route {\n        lookup(location);\n        t_on_failure(TOVOICEMAIL);\nif(!t_relay()) {\n            sl_send_reply(500, relaying failed);\n}\n}\n    failure_route[TOVOICEMAIL] {\nif(is_method(INVITE)) {\n# call failed - relay to voice mail\n             t_relay_to_udp(voicemail.server.com,5060);\n}\n}\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "reply_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nMain SIP response (reply) handling block - it contains a set of actions to be executed for SIP replies. It is executed for all replies received from the network.\n\n\nIt does not have a name and it is executed by the core, before any other module handling the SIP reply. It is triggered only by SIP replies received on the network.\n\n\nThere is no network route that can be enforced for a SIP reply - it is sent based on Via header, according to SIP RFC3261 - therefore no dedicated actions for forwarding the reply must be used in this block.\n\n\nThis routing block is optional, if missing, the SIP reply is sent to the address in 2nd Via header.\n\n\nOne can decide to drop a SIP reply by using drop action.\n\n\nExample:\n\nreply_route {\nif(status==128) {\n    drop;\n  }\n}\n\nNote: for backward compatibility reasons, the main 'reply' routing block can be also identified by 'onreply_route {\u2026}' or 'onreply_route[0] {\u2026}'.\n\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "onreply_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nSIP reply routing block executed by tm module. It contains a set of actions to be taken for SIP replies in the contect of an active transaction..\n\n\nThe 'onreply_route' must be armed for the SIP requests whose replies should be processed within it, via t_on_reply(\u201conreply_route_index\u201d).\n\n\nMain 'onreply_route' block is executed before a possible tm 'onreply_route' block.\n\n  request_route {\n      lookup(location);\n      t_on_reply(LOGRPL);\nif(!t_relay()) {\n          sl_send_reply(500, relaying failed);\n}\n}\n\n  reply_route {\nif(!t_check_trans()) {\n          drop;\n}\n}\n\n  onreply_route[LOGRPL] {\nif(status=~1[0-9][0-9]) {\nlog(provisional response\\n);\n}\n}\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "onsend_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nThe route is executed in when a SIP request is sent out. Only a limited number of commands are allowed (drop, if + all the checks, msg flag manipulations, send(), log(), textops::search()).\n\n\nIn this route the final destination of the message is available an can be checked (with snd_ip, snd_port, to_ip, to_port, snd_proto, snd_af).\n\n\nThis route is executed only when forwarding requests - it is not executed for replies, retransmissions, or locally generated messages (e.g. via fifo uac).\n\n\nExample:\n\n  onsend_route {\nif(to_ip==1.2.3.4  !isflagset(12)){\nlog(1, message blocked\\n);\n      drop;\n}\n}\n\n snd_ip, snd_port - behave like src_ip/src_port, but contain the ip/port Kamailio will use to send the message\n\n to_ip, to_port - like above, but contain the ip/port the message will be sent to (not to be confused with dst_ip/dst_port, which are the destination of the original received request: Kamailio's ip and port on which the message was received)\n\n snd_proto, snd_af - behave like proto/af but contain the protocol/address family that Kamailio will use to send the message\n\n msg:len - when used in an onsend_route, msg:len will contain the length of the message on the wire (after all the changes in the script are applied, Vias are added a.s.o) and not the lentgh of the original message.\n\n\n"
    },
    {
        "rightLabel": "Routing Blocks",
        "text": "event_route",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nGeneric type of route executed when specific events happen.\n\n\nPrototype: event_route[groupid:eventid]\n\n\n groupid - should be the name of the module that triggers the event\n\n eventid - some meaningful short text describing the event\n\n\n\nImplementations:\n\n\n event_route[core:worker-one-init] - executed by core after the first udp sip worker process executed the child_init() for all modules, before starting to process sip traffic\n\n note that due to forking, other sip workers can get faster to listening for sip traffic\n\n\n\n\nevent_route[core:worker-one-init] {\n        xlog(L_INFO,Hello world\\n);\n}\n\n event_route[htable:mod-init] - executed by htable module after all modules have been initialised. Good for initialising values in hash tables.\n\n\nmodparam(htable, htable, a=size=4;)\n\nevent_route[htable:mod-init] {\n  $sht(a=calls-to::10.10.10.10) = 0;\n  $sht(a=max-calls-to::10.10.10.10) = 100;\n}\n\nrequest_route {\nif(is_method(INVITE)  !has_totag())\n{\nswitch($rd) {\ncase 10.10.10.10:\n        lock(calls-to::10.10.10.10);\n        $sht(a=calls-to::10.10.10.10) =\n            $sht(a=calls-to::10.10.10.10) + 1;\n        unlock(calls-to::10.10.10.10);\nif($sht(a=calls-to::10.10.10.10)$sht(a=max-calls-to::10.10.10.10))\n{\n           sl_send_reply(500, To many calls to .10);\nexit;\n}\nbreak;\n      ...\n    }\n}\n}\n\n event_route [tm:local-request] - executed on locally generated requests.\n\n\nevent_route [tm:local-request] { # Handle locally generated requests\n  xlog(L_INFO, Routing locally generated $rm to $ru\\n);\n  t_set_fr(10000, 10000);\n}\n\n event_route [tm:branch-failure] - executed on all failure responses.\n\n\nevent_route [tm:failure-branch] { # Handle failure response\n  xlog(L_INFO, Handling $T_reply_code response to $rm to $ru\\n);\nif (t_check_status(430)) { # Outbound flow failed\n    unregister(location, $tu, $T_reply_ruid);\nif (t_next_contact_flow()) {\n      t_relay();\n}\n}\n}\n"
    },
    {
        "description": "\n\nIF-ELSE statement\n\n\nPrototype:\n\n    if(expr) {\n       actions;\n    } else {\n       actions;\n    }\n\nThe 'expr' should be a valid logical expression.\n\n\nThe logical operators that can be used in 'expr':\n\n  ==      equal\n  !=      not equal\n  =~      regular expression matching: Note: Posix regular expressions will be used, e.g. use [[:digit:]]{3} instead of \\d\\d\\d\n  !~      regular expression not-matching (NOT PORTED from Kamailio 1.x, use '!(x =~ y)')\n         greater\n  =      greater or equal\n         less\n  =      less or equal\n        logical AND\n  ||      logical OR\n  !       logical NOT\n  [ ... ] test operator - inside can be any arithmetic expression\n\nExample of usage:\n\n  if(is_method(INVITE))\n  {\n      log(this sip message is an invite\\n);\n  } else {\n      log(this sip message is not an invite\\n);\n  }\n",
        "snippet": "if(${1: arg1}) {\n\n}",
        "text": "if",
        "type": "value",
        "rightLabel": "Script Statements",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "description": "\n\nSWITCH statement - it can be used to test the value of a pseudo-variable. \n\n\nIMPORTANT NOTE: 'break' can be used only to mark the end of a 'case' branch (as it is in shell scripts). If you are trying to use 'break' outside a 'case' block the script will return error \u2013 you must use 'return' there.\n\n\nExample of usage:\n\n    route {\n        route(1);\n        switch($retcode)\n        {\n            case -1:\n                log(process INVITE requests here\\n);\n            break;\n            case 1:\n                log(process REGISTER requests here\\n);\n            break;\n            case 2:\n            case 3:\n                log(process SUBSCRIBE and NOTIFY requests here\\n);\n            break;\n            default:\n                log(process other requests here\\n);\n       }\n\n        # switch of R-URI username\n        switch($rU)\n        {\n            case 101:\n                log(destination number is 101\\n);\n            break;\n            case 102:\n                log(destination number is 102\\n);\n            break;\n            case 103:\n            case 104:\n                log(destination number is 103 or 104\\n);\n            break;\n            default:\n                log(unknown destination number\\n);\n       }\n    }\n\n    route[1]{\n        if(is_method(INVITE))\n        {\n            return(-1);\n        };\n        if(is_method(REGISTER))\n            return(1);\n        }\n        if(is_method(SUBSCRIBE))\n            return(2);\n        }\n        if(is_method(NOTIFY))\n            return(3);\n        }\n        return(-2);\n    }\n\nNOTE: take care while using 'return' - 'return(0)' stops the execution of the script.\n\n",
        "snippet": "switch(${1: arg1}) {\n    case ${2: case1}:\n\n    break;\n    default:\n\n}",
        "text": "switch",
        "type": "value",
        "rightLabel": "Script Statements",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core"
    },
    {
        "rightLabel": "Script Statements",
        "text": "while",
        "snippet": "while($var(${1: var})  ${2: val}) {\n\n}",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nwhile statement\n\n\nExample of usage:\n\n  \n  $var(i) = 0;\n  while($var(i)  10)\n  {\n      xlog(counter: $var(i)\\n);\n      $var(i) = $var(i) + 1;\n  }\n"
    },
    {
        "rightLabel": "Script Operations",
        "text": "Assignment",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nAssignments can be done like in C, via '=' (equal). The following pseudo-variables can be used in left side of an assignment:\n\n\n Unordered List Item AVPs - to set the value of an AVP\n\n script variables ($var(\u2026)) -  to set the value of a script variable\n\n shared variables ($shv(\u2026))\n\n $ru - to set R-URI\n\n $rd - to set domain part of R-URI\n\n $rU - to set user part of R-URI\n\n $rp - to set the port of R-URI\n\n $du - to set dst URI\n\n $fs - to set send socket\n\n $br - to set branch\n\n $mf - to set message flags value\n\n $sf - to set script flags value\n\n $bf - to set branch flags value\n\n\n$var(a) = 123;\n\nFor avp's there a way to remove all values and assign a single value in one statement (in other words, delete existing AVPs with same name, add a new one with the right side value). This replaces the := assignment operator from kamailio  3.0.\n\n$(avp(i:3)[*]) = 123;\n$(avp(i:3)[*]) = $null;\n"
    },
    {
        "rightLabel": "Script Operations",
        "text": "String Operations",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nFor strings, '+' is available to concatenate.\n\n$var(a) = test;\n$var(b) = sip: + $var(a) + @ + $fd;\n"
    },
    {
        "rightLabel": "Script Operations",
        "text": "Arithmetic Operations",
        "descriptionMoreURL": "https://www.kamailio.org/wiki/cookbooks/5.1.x/core",
        "type": "value",
        "description": "\n\nFor numbers, one can use:\n\n\n + : plus\n\n - : minus\n\n / : divide\n\n * : multiply\n\n % : modulo (Kamailio uses 'mod' instead of '%')\n\n | : bitwise OR\n\n  : bitwise AND\n\n ^ : bitwise XOR\n\n ~ : bitwise NOT\n\n \u00ab : bitwise left shift\n\n \u00bb : bitwise right shift\n\n\n\nExample:\n\n$var(a) = 4 + ( 7  ( ~2 ) );\n\nNOTE: to ensure the priority of operands in expression evaluations do use parenthesis.\n\n\nArithmetic expressions can be used in condition expressions.\n\nif( $var(a)  4 )\n    log(var a has third bit set\\n);\n"
    }
]
